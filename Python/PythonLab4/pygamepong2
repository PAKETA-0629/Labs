import pygame
import socket
import threading        #щоб отримувати та відправляти повідомлення. в іншому випадку ми би отримували смс тільки після відправки чого небудь
import time
from colors import *
from ball import Ball
from racket import Racket
from directions import Directions
from player import Player

clock = pygame.time.Clock()

shutdown = False
join = False
WIN_WIDTH = 800
WIN_HEIGHT = 640
MAX_SCORE = 5
DISPLAY = (WIN_WIDTH, WIN_HEIGHT)
pygame.init()
clock = pygame.time.Clock()
screen = pygame.display.set_mode(DISPLAY, 0, 32)

DONE = False
FPS = 30
SpawnBall = False
Send = False
start = False
getinfo = False
num = []
dire = []

left_player = Player(Directions.LEFT, 'Left')
right_player = Player(Directions.RIGHT, 'Right')

#curr_ball = Ball(screen, WIN_WIDTH, WIN_HEIGHT)

left_racket = Racket(screen, WIN_WIDTH, WIN_HEIGHT, Directions.LEFT)
#right_racket = Racket(screen, WIN_WIDTH, WIN_HEIGHT, Directions.RIGHT)

rackets = pygame.sprite.Group()
rackets.add(left_racket)
#rackets.add(right_racket)
stuff_to_draw = pygame.sprite.Group()
stuff_to_draw.add(left_racket)
#stuff_to_draw.add(right_racket)



def game_over(screen, winner, left_paper, right_player):
    gray_overlay = pygame.Surface((WIN_WIDTH, WIN_HEIGHT))
    gray_overlay.fill(GRAY)
    gray_overlay.set_colorkey(GRAY)
    pygame.draw.rect(gray_overlay, BLACK, [0, 0, WIN_WIDTH, WIN_HEIGHT])
    gray_overlay.set_alpha(99)
    screen.blit(gray_overlay, (0, 0))
    font = pygame.font.SysFont(None, 100)
    game_over = font.render('{} Player WINS!'.format(winner.name), True, WHITE)
    screen.blit(game_over, (WIN_WIDTH // 2 - 300, WIN_HEIGHT // 2 - 100))
    scoreline = font.render(
        '{} - {}'.format(left_paper.score, right_player.score), True, WHITE)
    screen.blit(scoreline, (WIN_WIDTH // 2 - 50, WIN_HEIGHT // 2 + 100))
    pygame.display.update()
    pygame.time.delay(2000)



def receving(name, sock):
    while not shutdown:
        try:
            while True:
                data, addr = sock.recvfrom(1024)
                global num
                global dire
                global getinfo
                data = data.decode("utf-8")
                num = []
                dire = []
                for i in data:
                    if i.isdigit():
                        num.append(i)
                    elif i.isspace():
                        pass
                    else:
                        dire.append(i)
                num = int("".join(num))
                dire = str("".join(dire))
                if dire == "Directions.DOWN_LEFT":
                    dire = Directions.DOWN_LEFT
                elif dire == "Directions.UP_LEFT":
                    dire = Directions.UP_LEFT
                elif dire == "Directions.DOWN_RIGHT":
                    dire = Directions.DOWN_RIGHT
                elif dire == "Directions.UP_RIGHT":
                    dire = Directions.UP_RIGHT
                getinfo = True
                print("got a data")

                time.sleep(0.2)
        except:
            pass

host = socket.gethostbyname(socket.gethostname())
port = 0


sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
sock.bind((host, port))
sock.setblocking(0)     #щоб користувачу не вилітали помилки

ip = str(input("Enter IP: "))
print("[ Connected ]")
userName = input("Enter Your name: ")
server = ("127.0.0.1", 9090)        #уточнити айпі сервака

rT = threading.Thread(target = receving, args = ("RecvThread", sock))      #хз, якась многопоточність
rT.start()
#BallInfo = None



while not DONE:


    if join == False:
        joinUser = (" ")
        sock.sendto(joinUser.encode("utf-8"), server)
        join = True
    if Send:
        sock.sendto((str(BallInfoY) + " " + str(BallInfoDirect)).encode("utf-8"), server)
        Send = False

    screen.fill(BLACK)

    if getinfo:
        curr_ball = Ball(screen, WIN_WIDTH, WIN_HEIGHT, dire)
        curr_ball.rect.x = WIN_WIDTH - 10 
        curr_ball.rect.y = num
        getinfo = False
        SpawnBall = True



    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            DONE = True

    pygame.event.pump()
    keys = pygame.key.get_pressed()
    if keys[pygame.K_q]:
        DONE = True
    if keys[pygame.K_w]:
        left_racket.move_up()
    if keys[pygame.K_s]:
        left_racket.move_down()
    if keys[pygame.K_f]:
        curr_ball = Ball(screen, WIN_WIDTH, WIN_HEIGHT, dire)
        curr_ball.rect.x = 10
        getinfo = False
        SpawnBall = True

    stuff_to_draw.update()
    if SpawnBall:
        curr_ball.update()

    if SpawnBall:
        col_left = curr_ball.rect.colliderect(left_racket.rect)
        if col_left == 1:
            curr_ball.toggle_direction()
            curr_ball.hit()

    if SpawnBall:
        if curr_ball.get_x_val() <= 0:  # left border
            left_player.score = 1
            curr_ball = Ball(screen, WIN_WIDTH, WIN_HEIGHT)
        elif curr_ball.get_x_val() >= WIN_WIDTH:  # right border
            BallInfoY = curr_ball.rect.y
            BallInfoDirect = curr_ball.direction
            del curr_ball
            SpawnBall = False
            Send = True
            #right_player.score = 1
            #curr_ball = Ball(screen, WIN_WIDTH, WIN_HEIGHT)

    # Print scores
    font = pygame.font.SysFont('Helvetica', 25)

    left_player_score = font.render(
        '{}'.format(left_player.score), True, (255, 255, 255))
    right_player_score = font.render(
        '{}'.format(right_player.score), True, (255, 255, 255))
    goal_text = font.render(
        '{}'.format(MAX_SCORE), True, (255, 255, 0))

    screen.blit(left_player_score, (WIN_WIDTH // 2 - 100, 10))
    screen.blit(right_player_score, (WIN_WIDTH // 2 + 100, 10))
    screen.blit(goal_text, (WIN_WIDTH // 2, 0))

    stuff_to_draw.draw(screen)
    if SpawnBall:
       curr_ball.draw(screen)

    if left_player.score >= MAX_SCORE:
        game_over(screen, left_player, left_player, right_player)
    elif right_player.score >= MAX_SCORE:
        game_over(screen, right_player, left_player, right_player)

    if left_player.score >= MAX_SCORE or right_player.score >= MAX_SCORE:
        DONE = True

    pygame.display.set_caption('Ping Pong '+ str(clock.get_fps()))

    pygame.display.flip()
    clock.tick(FPS)
rT.join()
sock.close()
pygame.quit()
